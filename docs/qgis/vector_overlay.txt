24.1.24. Vector overlay
Clip

Difference

Difference (multiple)

Extract/clip by extent

Intersection

Intersection (multiple)

Line intersections

Split with lines

Symmetrical difference

Union

Union (multiple)

24.1.24.1. Clip
Clips a vector layer using the features of an additional polygon layer.

Only the parts of the features in the input layer that fall within the polygons of the overlay layer will be added to the resulting layer.

Warning

Geometry modification only

This operation modifies only the features geometry. The attribute values of the features are not modified, although properties such as area or length of the features will be modified by the overlay operation. If such properties are stored as attributes, those attributes will have to be manually updated.

This algorithm uses spatial indexes on the providers, prepared geometries and apply a clipping operation if the geometry isn’t wholly contained by the mask geometry.

../../../../_images/clip3.png
Fig. 24.119 Clipping operation between a two-feature input layer ‘a’ and a single feature overlay layer ‘b’ (left) - resulting in a new layer with the modified ‘a’ features (right)

checkbox Allows features in-place modification of point, line, and polygon features

Default menu: Vector ► Geoprocessing Tools

See also

Intersection, Difference

Parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Layer containing the features to be clipped

Overlay layer

OVERLAY

[vector: polygon]

Layer containing the clipping features

Clipped

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain the features from the input layer that are inside the overlay (clipping) layer. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Outputs
Label

Name

Type

Description

Clipped

OUTPUT

[same as input]

Layer containing features from the input layer split by the overlay layer.

Python code
Algorithm ID: qgis:clip

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.2. Difference
Extracts features from the input layer that don’t fall within the boundaries of the overlay layer.

Input layer features that partially overlap the overlay layer feature(s) are split along the boundary of those feature(s) and only the portions outside the overlay layer features are retained.

Warning

Geometry modification only

This operation modifies only the features geometry. The attribute values of the features are not modified, although properties such as area or length of the features will be modified by the overlay operation. If such properties are stored as attributes, those attributes will have to be manually updated.

../../../../_images/difference.png
Fig. 24.120 Difference operation between a two-features input layer ‘a’ and a single feature overlay layer ‘b’ (left) - resulting in a new layer with the modified ‘a’ features (right)

checkbox Allows features in-place modification of point, line, and polygon features

Default menu: Vector ► Geoprocessing Tools

See also

Difference (multiple), Symmetrical difference, Clip

Parameters
Basic parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Layer to extract (parts of) features from.

Overlay layer

OVERLAY

[vector: geometry]

Layer containing the geometries that will be subtracted from the input layer geometries. It is expected to have at least as many dimensions (point: 0D, line: 1D, polygon: 2D, volume: 3D) as the input layer geometries.

Difference

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain the (parts of) features from the input layer that are not inside the overlay layer. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Advanced parameters
Label

Name

Type

Description

Grid size

Optional

GRID_SIZE

[numeric: double]

Default: Not set

If provided, the input geometries are snapped to a grid of the given size, and the result vertices are computed on that same grid. Requires GEOS 3.9.0 or higher.

Outputs
Label

Name

Type

Description

Difference

OUTPUT

[same as input]

Layer containing (parts of) features from the input layer not overlapping the overlay layer.

Python code
Algorithm ID: qgis:difference

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.3. Difference (multiple)
Extracts features from the input layer that fall completely outside or only partially overlap the features from any of the overlay layer(s).

For each overlay layer the difference is calculated between the result of all previous difference operations and this overlay layer. Input layer features that partially overlap feature(s) in the overlay layer are split along those features’ boundary and only the portions outside the overlay layer features are retained.

Warning

Geometry modification only

This operation modifies only the features geometry. The attribute values of the features are not modified, although properties such as area or length of the features will be modified by the overlay operation. If such properties are stored as attributes, those attributes will have to be manually updated.

../../../../_images/difference_multi.png
Fig. 24.121 Difference operation between a two-feature input layer ‘a’ and single feature overlay layers ‘b’ and ‘c’ (left) - resulting in a new layer with the modified ‘a’ features (right)

See also

Difference, Symmetrical difference, Clip

Parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Layer to extract (parts of) features from.

Overlay layers

OVERLAYS

[vector: geometry] [list]

List of layers containing the geometries that will be subtracted from the input layer geometries. They are expected to have at least as many dimensions (point: 0D, line: 1D, polygon: 2D, volume: 3D) as the input layer geometries.

Difference

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain the (parts of) features from the input layer that do not overlap features of the overlay layers. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Outputs
Label

Name

Type

Description

Difference

OUTPUT

[same as input]

Layer containing (parts of) features from the input layer not overlapping features from the overlay layers.

Python code
Algorithm ID: qgis:multidifference

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.4. Extract/clip by extent
Creates a new vector layer that only contains features which fall within a specified extent. Any features which intersect the extent will be included by default.

../../../../_images/extractbyextent.png
Fig. 24.122 Extract operation between a three-feature input layer ‘a’ and a dashed extent (left) - resulting features with dashed extent for reference (right)

Optionally, feature geometries can also be clipped to the extent.

../../../../_images/extractbyextent_clip.png
Fig. 24.123 Extract operation between a three-feature input layer ‘a’ and a dashed extent (left) - resulting features with dashed extent for reference (right)

See also

Clip

Parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Layer to extract (parts of) features from.

Extent (xmin, xmax, ymin, ymax)

EXTENT

[extent]

Extent for clipping.

Available methods are:

Calculate from layer…: uses extent of a layer loaded in the current project

Calculate from layout map…: uses extent of a layout map item in the active project

Calculate from bookmark…: uses extent of a saved bookmark

Use map canvas extent

Draw on canvas: click and drag a rectangle delimiting the area to take into account

Enter the coordinates as xmin, xmax, ymin, ymax

Clip features to extent

CLIP

[boolean]

Default: False

If checked, the geometries will be clipped to the extent chosen instead of taking the whole geometry as output. Moreover, output geometries will be automatically converted to multi geometries to ensure uniform output types.

Extracted

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain the features from the input layer that are inside the clip extent. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Outputs
Label

Name

Type

Description

Extracted

OUTPUT

[same as input]

Layer containing the clipped features.

Python code
Algorithm ID: native:extractbyextent

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.5. Intersection
Extracts the portions of features from the input layer that overlap features in the overlay layer.

Features in the intersection layer are assigned the attributes of the overlapping features from both the input and overlay layers.

Warning

Geometry modification only

This operation modifies only the features geometry. The attribute values of the features are not modified, although properties such as area or length of the features will be modified by the overlay operation. If such properties are stored as attributes, those attributes will have to be manually updated.

../../../../_images/intersection.png
Fig. 24.124 Intersection operation between a two-feature input layer ‘a’ and a single feature overlay layer ‘b’ (left) - overlapping areas become a new two-feature layer with both layers’ attributes (right)

Default menu: Vector ► Geoprocessing Tools

Warning

This algorithm drops existing primary keys or FID values and regenerates them in output layers.

See also

Intersection (multiple), Clip, Difference

Parameters
Basic parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Layer to extract (parts of) features from.

Overlay layer

OVERLAY

[vector: geometry]

Layer containing the features to check for overlap. Its features’ geometry is expected to have at least as many dimensions (point: 0D, line: 1D, polygon: 2D, volume: 3D) as the input layer’s.

Input fields to keep (leave empty to keep all fields)

Optional

INPUT_FIELDS

[tablefield: any] [list]

Default: Not set

Field(s) of the input layer to keep in the output. If no fields are chosen all fields are taken.

Overlay fields to keep (leave empty to keep all fields)

Optional

OVERLAY_FIELDS

[tablefield: any] [list]

Default: Not set

Field(s) of the overlay layer to keep in the output. If no fields are chosen all fields are taken. Duplicate field names will be appended a count suffix to avoid collision.

Intersection

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain (the parts of) the features from the input layer that overlap one or more features from the overlay layer. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Advanced parameters
Label

Name

Type

Description

Overlay fields prefix

Optional

OVERLAY_FIELDS_PREFIX

[string]

Add a prefix to identify fields of the overlay layer. Duplicate field names will be appended a count suffix to avoid collision.

Grid size

Optional

GRID_SIZE

[numeric: double]

Default: Not set

If provided, the input geometries are snapped to a grid of the given size, and the result vertices are computed on that same grid. Requires GEOS 3.9.0 or higher.

Outputs
Label

Name

Type

Description

Intersection

OUTPUT

[same as input]

Layer containing (parts of) features from the input layer that overlap the overlay layer.

Python code
Algorithm ID: qgis:intersection

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.6. Intersection (multiple)
Extracts the overlapping portions of features in the input and all overlay layers.

Features in the output layer are assigned the attributes of the overlapping features from both the input and overlay layers.

Warning

Geometry modification only

This operation modifies only the features geometry. The attribute values of the features are not modified, although properties such as area or length of the features will be modified by the overlay operation. If such properties are stored as attributes, those attributes will have to be manually updated.

../../../../_images/intersection_multi.png
Fig. 24.125 Intersection operation between a two-feature input layer ‘a’ and single feature overlay layers ‘b’ and ‘c’ (left) - overlapping areas become a new two-feature layer with all layers’ attributes (right)

Warning

This algorithm drops existing primary keys or FID values and regenerate them in output layers.

See also

Intersection, Clip, Difference

Parameters
Basic parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Layer to extract (parts of) features from.

Overlay layers

OVERLAYS

[vector: geometry] [list]

Layers containing the features to check for overlap. The features’ geometry is expected to have at least as many dimensions (point: 0D, line: 1D, polygon: 2D, volume: 3D) as the input layer’s.

Advanced parameters
Label

Name

Type

Description

Overlay fields prefix

Optional

OVERLAY_FIELDS_PREFIX

[string]

Add a prefix to identify fields of the overlay layers. Duplicate field names will be appended a count suffix to avoid collision.

Outputs
Label

Name

Type

Description

Intersection

OUTPUT

[same as input]

Layer containing (parts of) features from the input layer that overlap all the overlay layers.

Python code
Algorithm ID: qgis:multiintersection

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.7. Line intersections
Creates point features where the lines from the two layers intersect.

../../../../_images/line_intersection.png
Fig. 24.126 Points of intersection

Default menu: Vector ► Analysis Tools

Warning

This algorithm drops existing primary keys or FID values and regenerate them in output layers.

Parameters
Basic parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: line]

Input line layer.

Intersect layer

INTERSECT

[vector: line]

Layer to use to find line intersections.

Input fields to keep (leave empty to keep all fields)

Optional

INPUT_FIELDS

[tablefield: any] [list]

Default: Not set

Field(s) of the input layer to keep in the output. If no fields are chosen all fields are taken.

Intersect fields to keep (leave empty to keep all fields)

Optional

INTERSECT_FIELDS

[tablefield: any] [list]

Default: Not set

Field(s) of the intersect layer to keep in the output. If no fields are chosen all fields are taken. Duplicate field names will be appended a count suffix to avoid collision.

Intersection

OUTPUT

[vector: point]

Default: [Create temporary layer]

Specify the layer to contain the intersection points of the lines from the input and overlay layers. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Advanced parameters
Label

Name

Type

Description

Intersect fields prefix

Optional

INTERSECT_FIELDS_PREFIX

[string]

Add a prefix to identify fields of the intersect layer.

Outputs
Label

Name

Type

Description

Intersections

OUTPUT

[vector: point]

Point vector layer of the lines intersections, with both layers’ attributes.

Python code
Algorithm ID: qgis:lineintersections

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.8. Split with lines
Splits the lines or polygons in one layer using the lines or polygon rings in another layer to define the breaking points. Intersection between geometries in both layers are considered as split points.

Output will contain multi geometries for split features.

../../../../_images/split_with_lines.png
Fig. 24.127 Split lines

checkbox Allows features in-place modification of line and polygon features

Warning

This algorithm drops existing primary keys or FID values and regenerate them in output layers.

Parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: line, polygon]

Layer containing the lines or polygons to split.

Split layer

LINES

[vector: line, polygon]

Layer whose lines or rings are used to define the breaking points.

Split

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain the splitted (in case they are intersected by a line in the split layer) line/polygon features from the input layer. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Outputs
Label

Name

Type

Description

Split

OUTPUT

[same as input]

Output vector layer with split lines or polygons from input layer.

Python code
Algorithm ID: qgis:splitwithlines

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.9. Symmetrical difference
Creates a layer containing features from both the input and overlay layers but with the overlapping areas between the two layers removed.

The attribute table of the symmetrical difference layer contains attributes and fields from both the input and overlay layers.

Warning

Geometry modification only

This operation modifies only the features geometry. The attribute values of the features are not modified, although properties such as area or length of the features will be modified by the overlay operation. If such properties are stored as attributes, those attributes will have to be manually updated.

../../../../_images/symmetrical_difference.png
Fig. 24.128 Symmetrical difference operation between a two-features input layer ‘a’ and a single feature overlay layer ‘b’ (left) - resulting three-feature layer with both layers’ attributes (right)

Default menu: Vector ► Geoprocessing Tools

Warning

This algorithm drops existing primary keys or FID values and regenerate them in output layers.

See also

Difference, Clip, Intersection

Parameters
Basic parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

First layer to extract (parts of) features from.

Overlay layer

OVERLAY

[vector: geometry]

Second layer to extract (parts of) features from. Ideally the geometry type should be the same as input layer.

Symmetrical difference

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain (the parts of) the features from the input and overlay layers that do not overlap features from the other layer. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Advanced parameters
Label

Name

Type

Description

Overlay fields prefix

Optional

OVERLAY_FIELDS_PREFIX

[string]

Add a prefix to identify fields of the overlay layer. Duplicate field names will be appended a count suffix to avoid collision.

Grid size

Optional

GRID_SIZE

[numeric: double]

Default: Not set

If provided, the input geometries are snapped to a grid of the given size, and the result vertices are computed on that same grid. Requires GEOS 3.9.0 or higher.

Outputs
Label

Name

Type

Description

Symmetrical difference

OUTPUT

[same as input]

Layer containing (parts of) features from each layer not overlapping the other layer, with both layers’ attributes.

Python code
Algorithm ID: qgis:symmetricaldifference

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.10. Union
Checks overlaps between features within the input layer and creates separate features for overlapping and non-overlapping parts. The area of overlap will create as many identical overlapping features as there are features that participate in that overlap.

../../../../_images/union.png
Fig. 24.129 Union operation with a single input layer with two overlapping features (left) - resulting in four features (middle) - features moved for clarity (right)

An overlay layer can also be used, in which case features from each layer are split at their overlap with features from the other one, creating a layer containing all the portions from both input and overlay layers. Features on the same layer will not split each other. The attribute table of the union layer is filled with attribute values from the respective original layer for non-overlapping features, and attribute values from both layers for overlapping features.

../../../../_images/union_with_overlay.png
Fig. 24.130 Union operation between a two-feature input layer ‘a’ and a single feature overlay layer ‘b’ (left) - resulting five-feature layer with attributes from both layers (right)

Note

With an overlay layer, features on the same layer will not split each other. If you want to split overlaps on the same layer as well as other layers, first run the algorithm with multiple layers then run the algorithm again with only the previous output.

Default menu: Vector ► Geoprocessing Tools

Warning

This algorithm drops existing primary keys or FID values and regenerate them in output layers.

See also

Union (multiple), Clip, Difference, Intersection

Parameters
Basic parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Input vector layer to split at any intersections.

Overlay layer

Optional

OVERLAY

[vector: geometry]

Layer that will be combined to the first one. Ideally the geometry type should be the same as input layer.

Union

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain the (split and duplicated) features from the input layer and the overlay layer. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Advanced parameters
Label

Name

Type

Description

Overlay fields prefix

Optional

OVERLAY_FIELDS_PREFIX

[string]

Add a prefix to identify fields of the overlay layer. Duplicate field names will be appended a count suffix to avoid collision.

Grid size

Optional

GRID_SIZE

[numeric: double]

Default: Not set

If provided, the input geometries are snapped to a grid of the given size, and the result vertices are computed on that same grid. Requires GEOS 3.9.0 or higher.

Outputs
Label

Name

Type

Description

Union

OUTPUT

[same as input]

Layer containing all the overlapping and non-overlapping parts from the processed layer(s).

Python code
Algorithm ID: qgis:union

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

24.1.24.11. Union (multiple)
Checks overlaps between features within the input layer and creates separate features for overlapping and non-overlapping parts. The area of overlap will create as many identical overlapping features as there are features that participate in that overlap.

../../../../_images/union.png
Fig. 24.131 Union operation with a single input layer with two overlapping features (left) - resulting in four features (middle) - features moved for clarity (right)

Multiple overlay layers can also be used, in which case features from each layer are split at their overlap with features from all other layers, creating a layer containing all the portions from both input and overlay layers. Features on the same layer will not split each other. The attribute table of the Union layer is filled with attribute values from the respective original layer for non-overlapping features, and attribute values from overlay layers for overlapping features.

../../../../_images/union_multi.png
Fig. 24.132 Union operation between a two-feature input layer ‘a’ and single feature overlay layers ‘b’ and ‘c’ (left) - resulting eleven-feature layer with attributes from all layers (right)

Note

With an overlay layer, features on the same layer will not split each other. If you want to split overlaps on the same layer as well as other layers, first run the algorithm with multiple layers then run the algorithm again with only the previous output.

Warning

This algorithm drops existing primary keys or FID values and regenerate them in output layers.

See also

Union, Clip, Difference, Intersection

Parameters
Basic parameters
Label

Name

Type

Description

Input layer

INPUT

[vector: geometry]

Input vector layer to split at any intersections.

Overlay layers

Optional

OVERLAYS

[vector: geometry] [list]

Layers that will be combined to the first one. Ideally the geometry type should be the same as input layer.

Union

OUTPUT

[same as input]

Default: [Create temporary layer]

Specify the layer to contain the (split and duplicated) features from the input layer and the overlay layers. One of:

Create Temporary Layer (TEMPORARY_OUTPUT)

Save to File…

Save to Geopackage…

Save to Database Table…

The file encoding can also be changed here.

Advanced parameters
Label

Name

Type

Description

Overlay fields prefix

Optional

OVERLAY_FIELDS_PREFIX

[string]

Add a prefix to identify fields of the overlay layers. Duplicate field names will be appended a count suffix to avoid collision.

Outputs
Label

Name

Type

Description

Union

OUTPUT

[same as input]

Layer containing all the overlapping and non-overlapping parts from the processed layer(s), with all layers’ attributes.

Python code
Algorithm ID: qgis:multiunion

import processing
processing.run("algorithm_id", {parameter_dictionary})
The algorithm id is displayed when you hover over the algorithm in the Processing Toolbox. The parameter dictionary provides the parameter NAMEs and values. See Using processing algorithms from the console for details on how to run processing algorithms from the Python console.

